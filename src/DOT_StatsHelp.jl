# [[file:../DOT_StatsHelp.org::*Copyright Notice][Copyright Notice:1]]
#########################################################################
#                                                                       #
# Copyright and Licensing Information                                   #
# -----------------------------------                                   #
#                                                                       #
# Copyright lies with the University of Tartu, Estonia, and with the    #
# author.                                                               #
#                                                                       #
# Permission is hereby granted to use and modify the source code under  #
# the terms of the Apache v2.0 license.                                 #
#                                                                       #
#                                                                       #
# Author:                                                               #
#                                                                       #
#        Dirk Oliver Theis                                              #
#        Assoc. Prof. Theoretical Computer Science                      #
#        University of Tartu                                            #
#        Estonia                                                        #
#                                                                       #
#########################################################################
# Copyright Notice:1 ends here

# [[file:../DOT_StatsHelp.org::*File headers][File headers:1]]
###########################################################################
#                                                                         #
#  THIS IS A MACHINE-GENERATED FILE.  DO NOT EDIT IT.                     #
#                                                                         #
#  (The actual source code is in the Org file.)                           #
#                                                                         #
###########################################################################
# File headers:1 ends here

# [[file:../DOT_StatsHelp.org::*Module definition & imports][Module definition & imports:1]]
module DOT_StatsHelp
# Module definition & imports:1 ends here

# [[file:../DOT_StatsHelp.org::*Module definition & imports][Module definition & imports:2]]
using DOT_NiceMath            # `‚ãÖ` = `*`  etc
using DOT_NiceMath.Numbers64  # ‚Ñù, ‚Ñ§, ‚Ñö

using LinearAlgebra: norm2, norm1, normInf as norm‚àû, norm_sqr as norm¬≤
# Module definition & imports:2 ends here

# [[file:../DOT_StatsHelp.org::*Basic types][Basic types:1]]
export Stats
# Basic types:1 ends here

# [[file:../DOT_StatsHelp.org::*The ~Stats~-type with constructor][The ~Stats~-type with constructor:1]]
struct Stats{ùêë,V}              # `V` stands for valency of the tensor
    # Input
    true_Œº        ::Array{‚Ñù, V}

    # Output
    empirical_Œº   ::Array{ùêë, V}

    err2¬≤         ::Vector{‚Ñù}  # 2-norm of tensor; \
    err1          ::Vector{‚Ñù}  # 1-norm  ~          | ultimate lengths:
    err‚àû          ::Vector{‚Ñù}  # ‚àû-norm  ~         /   `outer_reps`
    empirical_var ::Ref{ùêë}

    # Transient data
    _ws           ::Array{ùêë,V}
end
# The ~Stats~-type with constructor:1 ends here

# [[file:../DOT_StatsHelp.org::*The ~Stats~-type with constructor][The ~Stats~-type with constructor:2]]
function Stats(true_Œº ::Array{‚Ñù,V}, ::Type{ùêë}
               ;
               iterations_hint :: Int          )::Stats{ùêë,V}   where{ùêë<:Real,V}

    empirical_Œº   = Array{ùêë,V}(undef, size(true_Œº) )  ; empirical_Œº .= ùêë(0)
    _ws           = Array{ùêë,V}(undef, size(true_Œº) )

    err2¬≤ = sizehint!(‚Ñù[], iterations_hint)
    err1  = sizehint!(‚Ñù[], iterations_hint)
    err‚àû  = sizehint!(‚Ñù[], iterations_hint)
    empirical_var = Ref{ùêë}(0.0)

    return Stats{ùêë,V}(true_Œº,
                      empirical_Œº, err2¬≤, err1, err‚àû, empirical_var,
                      _ws)
end
# The ~Stats~-type with constructor:2 ends here

# [[file:../DOT_StatsHelp.org::*Adding a new data point][Adding a new data point:1]]
import Base: append!
function append!(s ::Stats{ùêë,V}
                 ;
                 ùê∏ ::Array{‚Ñù,V} ) ::Nothing  where{ùêë,V}

    (;true_Œº, err2¬≤, err1, err‚àû, empirical_Œº, empirical_var, _ws) = s

    @assert length(err2¬≤) == length(err1) ==
            length(err‚àû)

    n = length(err2¬≤)

    let new_Œº        = _ws
        new_Œº       .= n‚ãÖempirical_Œº/(n+1) .+ ùê∏/(n+1)
        empirical_Œº .= new_Œº
    end

    #
    # Updating `mean‚Ä¶err`
    #
    let err  = _ws
        err .= true_Œº - empirical_Œº

        push!( err2¬≤, norm¬≤(err) )
        push!( err1,  norm1(err) )
        push!( err‚àû,  norm‚àû(err) )
    end #^ let

    #
    # Updating variance
    #
    # We record the simple biased estimate of the empirical variance, and
    # correct it in the `finalize()` function.

    empirical_var[] = n‚ãÖempirical_var[]/(n+1) + norm¬≤( ùê∏ - empirical_Œº )/(n+1)

    nothing;
end #^ append!()
# Adding a new data point:1 ends here

# [[file:../DOT_StatsHelp.org::*Finalizing stats collection][Finalizing stats collection:1]]
function finalize!(s ::Stats{ùêë,V}) ::Nothing                  where{ùêë,V}

    (;err2¬≤, err1, err‚àû, empirical_var) = s

    @assert length(err2¬≤) ==
            length(err1)  == length(err‚àû)

    #
    # Un-bias empirical variance:
    #
    let n=length(err2¬≤)
        empirical_var[] *= (n-1)/n
    end
    nothing;
end #^ finalize!(::Stats)
# Finalizing stats collection:1 ends here

# [[file:../DOT_StatsHelp.org::*End of module][End of module:1]]
end #^ module SPSA_Shift
# End of module:1 ends here
